{
  "welcome": "Welcome to DSGD GUI",
  "select_language": "Select Language",
  "login": "Log in",
  "register": "Register",
  "forgot_password": "Forgot Password?",
  "reset_password": "Reset Password",
  "register_success": "Registration successful",
  "register_failed": "Registration failed",
  "login_failed": "Login failed",
  "network_error": "Network error",
  "signup": "Sign up",
  "logout": "Log out",
  "backToLogin": "Back to login",
  "name": "Name",
  "email": "Email",
  "password": "Password",
  "new_password": "New Password",
  "confirm_password": "Confirm Password",
  "password_reset_success": "Password reset successfully",
  "password_reset_failed": "Failed to reset password",
  "reset_email_sent": "Password reset email sent",
  "reset_failed": "Failed to send reset email",
  "back": "Back",
  "columns": "Columns",
  "rows": "Rows",
  "row": "Row",
  "features": "Features",
  "classes": "Classes",
  "class": "Class",
  "save": "Save",
  "continue": "Continue",
  "close": "Close",
  "and": "and",
  "menu": {
    "datasets": "Datasets",
    "experiments": "Experiments",
    "documentation": "Documentation"
  },
  "experiments": {
    "title": "Experiments",
    "add_experiment": "Add New Experiment",
    "name": "Experiment Name",
    "select_dataset": "Select Dataset",
    "addExperiment": "Create Experiment",
    "dataset": "Dataset",
    "createdAt": "Created at",
    "goToExperiment": "Go to Experiment",
    "deleteExperiment": "Delete Experiment",
    "confirmDelete": "Are you sure you want to delete this experiment? This action cannot be undone.",
    "editExperiment": "Edit Experiment"
  },
  "experiment":{
    "openIterations": "Open Iterations Menu",
    "iterations": "Iterations",
    "iteration": "Iteration",
    "dataset": "Dataset",
    "rules": "Rules",
    "rule": "Rule",
    "probabilities": "Probabilities",
    "train": "Train",
    "training": "Training",
    "randomSeed": "Random Seed",
    "testSize": "Test Size",
    "splitSeed": "Split Seed",
    "shuffle": "Shuffle",
    "dropNulls": "Drop Nulls",
    "dropDuplicates": "Drop Duplicates",
    "seeRules": "Go to Rules",
    "singleRule": "Add Single Column Rule",
    "multipleRules": "Add Multiple Columns Rule",
    "singleRuleInfo": "Generate rules involving only one column per rule. Useful for simple rules.",
    "singleRuleExample": "Example: 'PetalLength <= 3.75'",
    "multipleRulesInfo": "Generate rules involving multiple columns. Useful for more complex rules.",
    "multipleRulesExample": "Example: '(PetalLength - 3.75) * (PetalWidth - 1.19) <= 0.0'",
    "breakRules": "Number of Break",
    "breakRulesInfo": "Number of points at which to split the range of each column to generate rules. Generates n + 1 rules per column.",
    "selectColumns": "Select Columns",
    "generateRules": "Generate Rules",
    "maxEpochs": "Max Epochs",
    "minEpochs": "Min Epochs",
    "batchSize": "Batch Size",
    "learningRate": "Learning Rate",
    "optimFunction": "Optimization Function",
    "lossFunction": "Loss Function",
    "minDloss": "Min Change in Loss",
    "maxEpochsInfo": "Corresponds to the maximum number of iterations over the entire dataset during training.",
    "minEpochsInfo": "Minimum number of epochs to train before considering convergence.",
    "batchSizeInfo": "Number of samples processed before updating the model.",
    "learningRateInfo": "Controls how big of a step we take when updating the model parameters.",
    "optimFunctionInfo": "Algorithm used to update the model parameters based on the gradient.",
    "lossFunctionInfo": "Function that measures how well the model fits the data.",
    "minDlossInfo": "Minimum change in loss between epochs to consider the model has converged.", 
    "uncertainty": "Uncertainty",
    "mass": "Mass",
    "valid": "Valid",
    "label": "Label",
    "addRule": "Add Rule",
    "splitSettings": "Split Settings",
    "cleaningSettings": "Cleaning Settings",
    "cleaningInfo": "Changes will be applied when training",
    "addManualRule": "Add Manual Rule",
    "epoch": "Epoch",
    "loss": "Loss",
    "timeElapsed": "Time Elapsed",
    "timeRemaining": "Estimated Time Remaining",
    "queued": "There are multiple tasks in the queue. When the current task completes, this one will begin.",
    "stopped": "Training stopped by user. When the current iteration finishes, training will stop.",
    "stopTraining": "Stop Training",
    "confirmStopTraining": "Are you sure you want to stop the training?",
    "evaluating": "Evaluating",
    "metrics": "Metrics",
    "confusionMatrix": "Confusion Matrix",
    "trueLabel": "True",
    "predict": "Predict",
    "addRow": "Add Row",
    "predictedResults": "Predicted Results",
    "prediction": "Prediction",
    "newPrediction": "New Prediction",
    "deleteAll": "Delete All",
    "allRules": "All Rules",
    "topRules": "Top Rules",
    "showTop": "Show Top Rules:",  
    "score": "Importance",
    "validRule": "The masses sum to 1",
    "invalidRule": "Invalid rule: ",
    "invalidExpression": "Invalid expression",
    "invalidEpochs": "Minimum epochs cannot be greater than maximum.",
    "invalidBatchSize": "Batch size must be a positive number.",
    "invalidLearningRate": "Learning rate must be between 0 and 1.",
    "invalidTestSize": "Test size must be between 0 and 1.",
    "invalidLossFunction": "Loss function cannot be empty.",
    "invalidOptimFunction": "Optimization function cannot be empty.",
    "coverage": "Rule Coverage",
    "noRules": "No rules defined",
    "errorMessage": "Error starting training. Check the rules.",
    "uploadCSV": "Upload CSV for new prediction",
    "predictingInProgress": "Predicting in progress...",
    "tryAgain": "Try Again",
    "errorPredictingMessage": "Error during prediction. Please try again.",
    "confirmDeleteIteration": "Are you sure you want to delete this iteration? This action cannot be undone.",
    "errorDeletingIteration": "Error deleting iteration.",
    "uploadModel": "Upload Trained Model",
    "labelEncoder": "Label Encoder",
    "labelEncoderTooltip": "Provide a mapping of classes to numbers (e.g. {'class1': 0, 'class2': 1}). If the classes are already numbers, enter a mapping of each class to itself, e.g. {'0': 0, '1': 1}.",
    "upload": "Upload",
    "download": "Download",
    "errorUploadingModel": "Error uploading model.",
    "modelUploadedSuccessfully": "Model uploaded successfully.",
    "viewDatasetStats": "View Dataset Statistics",
    "editRules": "Edit and/or Create Rules",
    "ruleAdded": "A new blank rule has been added at the end of the list (page"
  },
  "datasets": {
    "editDataset": "Edit Dataset",
    "deleteDataset": "Delete Dataset",
    "confirmDelete": "Are you sure you want to delete this dataset? The associated experiments will be deleted. This action cannot be undone.",
    "title": "Datasets",
    "addDataset": "Add Dataset",
    "dataset": "Dataset",
    "train_dataset": "Train Dataset",
    "test_dataset": "Test Dataset",
    "shape": "Shape",
    "nulls": "Nulls",
    "unique": "Unique",
    "min": "Min",
    "max": "Max",
    "mean": "Mean",
    "upload_new": "Upload New Dataset",
    "encoding": "Encoding",
    "upload": {
      "title": "Upload Datasets",
      "submit": "Upload",
      "single_file": "Upload a single file",
      "multiple_files": "Upload train and test set",
      "file_header": "File has header",
      "select_class": "Select Class Column",
      "dataset_name": "Dataset Name",
      "select_file": "Select File",
      "select_train_file": "Select Train File",
      "select_test_file": "Select Test File",
      "selected_file": "Selected File",
      "selected_train_file": "Selected Train File",
      "selected_test_file": "Selected Test File",
      "instructions1": "You can upload a single file in CSV or Excel format if your dataset is complete.",
      "instructions2": "If your dataset is split into train and test sets, select two files in the upper selector.",
      "instructions3": "Make sure both files have the same column structure.",
      "error": {
        "file_type_mismatch": "Files must be of the same type.",
        "column_size_mismatch": "Files must have the same number of columns.",
        "file_type": "Upload files in CSV, XLSX, or Parquet format.",
        "no_files": "Please select at least one file.",
        "upload_failed": "Failed to upload files.",
        "target_column_required": "Please select a target column.",
        "name_required": "Please enter a dataset name.",
        "invalid_column_names": "Invalid column names. Empty, duplicate, or numeric names are not allowed.",
        "file_too_large": "File size exceeds the maximum limit of 50 MB."
      }
    }
  },
  "postTrain": {
    "backToSetup": "Back to Train",
    "backwithSameSetup": "Back to Train with Same Setup",
    "metrics": "Go to Metrics",
    "rules": "Go to Rules",
    "predict": "Go to Predict",
    "viewMetrics": "View Metrics",
    "compareMetrics": "Compare Metrics",
    "trainingError": "Training Error",
    "accuracyInfo": "Accuracy: The proportion of correct predictions out of all predictions",
    "precisionInfo": "Precision: The proportion of true positives out of all positive predictions",
    "recallInfo": "Recall: The proportion of true positives out of all actual positive cases",
    "f1ScoreInfo": "F1 Score: The harmonic mean of precision and recall",
    "aucInfo": "AUC: Area Under the ROC Curve, measures the model's ability to distinguish between classes"
  },
  "datasetsDocumentation": {
    "title": "Datasets Documentation",
    "introduction": "To train a model, you need to upload a dataset. You can upload datasets in CSV or Excel format.",
    "supportedFormats": {
      "title": "Supported Formats",
      "csv": "CSV (Comma-Separated Values)",
      "excel": "Excel (.xlsx)"
    },
    "uploadingDatasets": {
      "title": "Uploading Datasets",
      "description": "You can upload datasets in two ways, depending on how your data is organized.",
      "singleFile": {
        "title": "Single File Upload",
        "description": "You can upload a single file if your dataset is complete. Supported formats include CSV and Excel. Ensure that the file has a header row with column names."
      },
      "multipleFiles": {
        "title": "Multiple Files Upload",
        "description": "If your dataset is split into training and testing sets, you can upload two files. Ensure both files have the same column structure."
      },
      "instructions": {
        "title": "Instructions",
        "step1": "Select the appropriate upload method (single or multiple files).",
        "step2": "Indicate whether the file(s) contain a header row.",
        "step3": "Select the file(s) to upload.",
        "step4": "Click 'continue' to preview the dataset.",
        "step5": "Select the target column (class) for classification tasks.",
        "step6": "Provide a name for the dataset.",
        "step7": "Click 'Save' to complete the process."
      }
    }
  },
  "experimentDocumentation": {
    "title": "Experiment Documentation",
    "introduction": "An experiment is an instance of training a DSGD model using a specific dataset. Each experiment can have multiple iterations, each representing a separate attempt to train the model with defined rules.",
    "creatingExperiment": {
      "title": "Creating an Experiment",
      "description": "To create a new experiment, follow these steps:",
      "step1": "Navigate to the 'Experiments' section.",
      "step2": "Click on 'Create Experiment' (blue button with a plus sign).",
      "step3": "Select an existing dataset or upload a new one.",
      "step4": "Assign a name to the experiment.",
      "step5": "Click 'Create Experiment' to finish."
    },
    "trainingIterations": {
      "title": "Training Iterations",
      "description": "Each experiment can have multiple training iterations. Each iteration represents a separate attempt to train the model with the defined rules. You can start a new iteration by clicking on 'Open Iterations Menu' and then selecting 'New Iteration'."
    },
    "postTraining": {
      "title": "After Training",
      "description": "Once a training iteration is completed, you can review performance metrics, generated rules, and make predictions on new data. You can also compare metrics between different iterations to evaluate the impact of various configurations or rules."
    }
  },
  "rulesDocumentation": {
    "title": "Rules Documentation",
    "introduction": "Rules are expressions that combine variables, values, mathematical operators, and logical operators to define conditions on a dataset. Each column in the dataset can be used as a variable in the expression.",
    "syntax": {
      "title": "Allowed Syntax",
      "variables": "The names of the dataset columns are used. If they contain spaces, they will be automatically mapped.",
      "values": "Only numbers (integers or decimals) are allowed. Strings are not permitted.",
      "mathOperators": "Mathematical Operators: +, -, *, /",
      "comparisonOperators": "Comparison Operators: <, <=, >, >=, ==, !=",
      "logicalOperators": "Logical Operators: && (AND), || (OR)",
      "notes": "Chained comparisons are not allowed, e.g.: a <= x < b",
      "type": {
        "variables": "Variables",
        "values": "Values",
        "mathOperators": "Mathematical Operators",
        "comparisonOperators": "Comparison Operators",
        "logicalOperators": "Logical Operators"
      }
    },
    "examples": {
      "title": "Examples of Rules",
      "example1": "\"fixed acidity\" <= 6.34",
      "example2": "\"fixed acidity\" <= 6.34 && \"residual sugar\" > 3",
      "example3": "\"fixed acidity\" <= 6.34 || \"residual sugar\" > 3"
    },
    "warnings": {
      "title": "Warning Icons",
      "warning1": "The rule is invalid, the model cannot be trained.",
      "warning2": "the rule has some issues like masses not summing to 1, but the model can be trained with it."
    },
    "errors": {
      "title": "Common Errors",
      "error": "Error",
      "cause": "Cause",
      "solution": "Solution",
      "unknownIdentifier": {
        "error": "Unknown identifier",
        "cause": "Non-existent column name",
        "solution": "Check that the column exists and is spelled correctly"
      },
      "unsupportedOperator": {
        "error": "Unsupported binary operator",
        "cause": "Unsupported operator",
        "solution": "Use only + - * / <= >= < > == !="
      },
      "chainedComparisons": {
        "error": "Chained comparisons not supported",
        "cause": "Chained comparison like a <= x < b",
        "solution": "Separate into multiple conditions combined with &&"
      },
      "unknownNodeType": {
        "error": "Unknown node type",
        "cause": "Invalid or incomplete expression",
        "solution": "Check syntax and column names"
      }
    }
  }
}
